generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  EMPLOYER
}

model User {
  id        Int   @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  email     String   @unique
  name      String?
  skills    SkillUser[]  // Множество SkillUser для связи между User и Skill
  about     String?
  location String?
  website   String?
  phone String?
  company String?
  age       Int?
  avatar    String?
  password  String
  experience Experience[]
  role     Role     @default(USER)
  vacancies Vacancy[]
}

model Experience {
  id        Int   @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    Int
  title     String
  company   String
  startDate String
  endDate   String?
  description String?
  location  String?
  current   Boolean @default(false)

  user      User     @relation(fields: [userId], references: [id])
}

model Skill {
  id        Int   @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     SkillUser[]  // Множество SkillUser для связи между Skill и User
}

model SkillUser {
  id        Int   @id @default(autoincrement())
  skillId   Int
  userId    Int
  rating    Int    // Оценка от 1 до 10
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Обратное поле связи в модели Skill, которое указывает на SkillUser
  skill   Skill   @relation(fields: [skillId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@unique([skillId, userId])  // Уникальная связь между Skill и User
}

model Vacancy {
  id        Int   @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  company String
  description String
  location String
  salary Int
  // Corrected the attribute to @relation and the field to fields
  user User @relation(fields: [userId], references: [id])
  userId Int
}